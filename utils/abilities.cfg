#textdomain wesnoth-Saving_Elensefar

# inspire > meneldur
# distract and blitz > Madru
# battle tutor > Black the Red

#define SPECIAL_NOTES_DISTRACT
_" This unit is capable of distracting opponents, allowing allied units to trespass their Zones of Control and move unhindered around them." #enddef

#define SPECIAL_NOTES_INSPIRE
_" The presence of this unit inspires allied units of same or lower level next to it to deal more damage in combat." #enddef

#define SPECIAL_NOTES_BLITZ
_" This unit is able to grant the skirmisher ability to allied units that stand next to it on start of his turn." #enddef

#define SPECIAL_NOTES_BATTLE_TUTOR
_" The ability to teach battle experience to adjacent allied units allows them to earn experience points equivalent of the second unit level whenever the tutor attacks with his melee attack and hits at least once." #enddef

# wmllint: unbalanced-on
# wmlxgettext: [abilities]
#define ABILITY_BLITZ
    [leadership]
        id=blitz
        name= _ "blitz"
        description= _ "Allies that start their turn adjacent to this unit are granted Skirmisher for that turn."
        affect_self=no
        affect_allies=yes
        value=0
        special_note={SPECIAL_NOTES_BLITZ}
    [/leadership]
[/abilities]
[event]
    name=turn refresh
    id=blitz_turn_refresh
    first_time_only=no

    [store_unit]
        [filter]
            side=$side_number
            [and]
                [filter_adjacent]
                    ability=blitz
                    is_enemy=no
                [/filter_adjacent]
            [/and]
            [not]
                ability=skirmisher
            [/not]
            [not]
                ability=distract
            [/not]
            [not]
                ability=blitz
            [/not]
        [/filter]
        variable=blitzed
    [/store_unit]

    [foreach]
        array=blitzed
        [do]
            [modify_unit]
                [filter]
                    id=$this_item.id
                [/filter]
                [object]
                    id=blitz_skirmish
                    silent=yes
                    duration=turn
                    take_only_once=no
                    [effect]
                        apply_to=new_ability
                        [abilities]
                            {ABILITY_SKIRMISHER}
                            [+skirmisher]
                                name= _ "blitzed"
                                female_name= _ "female^blitzed"
                            [/skirmisher]
                        [/abilities]
                    [/effect]
                [/object]
                [effect]
                    apply_to=status
                    add=blitzed
                [/effect]
            [/modify_unit]
        [/do]
    [/foreach]
    {CLEAR_VARIABLE blitzed}
    [redraw][/redraw]
[/event]

[event]
    name=side turn end,time over,enemies defeated,defeat,victory,ser_victory
    id=blitz_turn_end
    first_time_only=no

    [store_unit]
        [filter]
            [filter_wml]
                [status]
                    blitzed=yes
                [/status]
            [/filter_wml]
        [/filter]
        variable=blitzed
    [/store_unit]

    [foreach]
        array=blitzed
        [do]
            [remove_object]
                id=$this_item.id
                x=$this_item.x
                y=$this_item.y
                object_id=blitz_skirmish
            [/remove_object]

            [modify_unit]
                [filter]
                    id=$this_item.id
                [/filter]
                [effect]
                    apply_to=status
                    remove=blitzed
                [/effect]
            [/modify_unit]
        [/do]
    [/foreach]

    {CLEAR_VARIABLE blitzed}
[/event]
[+abilities]
#enddef
# wmlxgettext: [/abilities]
# wmllint: unbalanced-off

#define WEAPON_SPECIAL_BATTLETUTOR
    [drains]
        id=battletutor
        name= _ "battle tutor"
        name_inactive= _ "battle tutor"
        description= _ "This unit is able to teach its battle skills to adjacent units of lower level while using this weapon providing a small boost to experience earned in battle."
        description_inactive= _ "This unit is able to teach its battle skills to adjacent units of lower level while using this weapon providing a small boost to experience earned in battle."
        special_note={SPECIAL_NOTES_BATTLE_TUTOR}
        active_on=offense
        value=33
    [/drains]
#enddef

#define WEAPON_SPECIAL_BATTLETUTOR_EVENT
    [event]
        id=battletutor_hit_tracking
        name=attack
        first_time_only=no
        [filter_attack]
            special=battletutor
        [/filter_attack]
        {VARIABLE battletutor_hit no}
        [event]
            id=battletutor_hits
            name=attacker hits
            [filter_attack]
                special=battletutor
            [/filter_attack]
            {VARIABLE battletutor_hit yes}
        [/event]
        [event]
            id=clear_variable
            name=side turn end,time over,enemies defeated,defeat,victory,ser_victory
            {CLEAR_VARIABLE battletutor_hit}
        [/event]
    [/event]

    [event]
        id=battletutor_effect
        name=attack end
        first_time_only=no

        [filter_condition]
            {VARIABLE_CONDITIONAL battletutor_hit boolean_equals yes}
        [/filter_condition]

        [filter_attack]
            special=battletutor
        [/filter_attack]

        {VARIABLE battletutor_value 1}

        [if]
            {VARIABLE_CONDITIONAL second_unit.level greater_than 0}
            [then]
                {VARIABLE_OP battletutor_value multiply $unit.level}
                {VARIABLE_OP battletutor_value add $second_unit.level}
            [/then]
        [/if]

        [store_unit]
            [filter]
                [filter_adjacent]
                    id=$unit.id
                    is_enemy=no
                [/filter_adjacent]
            [/filter]
            variable=adjacent_units
        [/store_unit]

        [for]
            array=adjacent_units
            reverse=yes
            [do]
                [if]
                    {VARIABLE_CONDITIONAL adjacent_units[$i].level less_than $unit.level}
                    {VARIABLE_CONDITIONAL adjacent_units[$i].level less_than_equal_to $second_unit.level}
                    [then]
                        {VARIABLE adjacent_experience "$(abs($battletutor_value-$adjacent_units[$i].level))"}
                        {VARIABLE_OP adjacent_units[$i].experience add $adjacent_experience}
                        [unstore_unit]
                            text="<span color='lightblue'>" + _ "$adjacent_experience XP" + "</span>"
                            variable=adjacent_units[$i]
                            fire_event=yes
                        [/unstore_unit]
                        {CLEAR_VARIABLE adjacent_experience}
                    [/then]
                [/if]
            [/do]
        [/for]

        [floating_text]
            text="<span color='lightblue'>" + _ "$battletutor_value XP" + "</span>"
            x,y=$unit.x,$unit.y
        [/floating_text]
        {CLEAR_VARIABLE battletutor_value,adjacent_units}
    [/event]
#enddef

#define ABILITY_DISTRACT
    [skirmisher]
        id=distract
        name= _ "distract"
        description= _ "This unit negates enemy Zones of Control around itself for allied units (but not for itself)."
        affect_self=no
        affect_allies=yes
        [affect_adjacent]
        [/affect_adjacent]
        special_note={SPECIAL_NOTES_DISTRACT}
    [/skirmisher]
#enddef

# Basically just a improved leadership ability
#define ABILITY_INSPIRE
    [leadership]
        id=inspire
        value="(15 * ((level - other.level) + 1 ))"
        cumulative=no
        name= _ "inspire"
        description= _ "This unit can inspire *allied* units that are next to it, making them do 15% more damage per level difference."
        special_note={SPECIAL_NOTES_INSPIRE}
        affect_self=no
        affect_allies=yes
        [affect_adjacent]
            [filter]
                formula="level <= other.level"
            [/filter]
        [/affect_adjacent]
    [/leadership]
#enddef
